{"ast":null,"code":"var _jsxFileName = \"/Users/cristian/cuby/website/pages/blog/posts/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport Header from '../../../components/Header';\nimport ErrorPage from 'next/error';\nimport Container from '../../../components/container';\nimport PostBody from '../../../components/post-body';\nimport PostHeader from '../../../components/post-header';\nimport { getPostBySlug, getAllPosts } from '../../../lib/api';\nimport PostTitle from '../../../components/post-title';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../../../lib/constants';\nimport markdownToHtml from '../../../lib/markdownToHtml';\n\nconst Post = ({\n  post,\n  morePosts\n}) => {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    page: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, router.isFallback ? __jsx(PostTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, post.title, \" | Next.js Blog Example with \", CMS_NAME), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.ogImage.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverImage,\n    date: post.date,\n    author: post.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), __jsx(PostBody, {\n    content: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Post;\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, ['title', 'date', 'slug', 'author', 'content', 'ogImage', 'coverImage']);\n  const content = await markdownToHtml(post.content || '');\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n  return {\n    paths: posts.map(posts => {\n      return {\n        params: {\n          slug: posts.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/cristian/cuby/website/pages/blog/posts/[slug].tsx"],"names":["useRouter","Header","ErrorPage","Container","PostBody","PostHeader","getPostBySlug","getAllPosts","PostTitle","Head","CMS_NAME","markdownToHtml","Post","post","morePosts","router","isFallback","slug","title","ogImage","url","coverImage","date","author","content","getStaticProps","params","props","getStaticPaths","posts","paths","map","fallback"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\n\nimport Header from '../../../components/Header';\n\n\nimport ErrorPage from 'next/error'\nimport Container from '../../../components/container'\nimport PostBody from '../../../components/post-body'\nimport PostHeader from '../../../components/post-header'\nimport { getPostBySlug, getAllPosts } from '../../../lib/api'\nimport PostTitle from '../../../components/post-title'\nimport Head from 'next/head'\nimport { CMS_NAME } from '../../../lib/constants'\nimport markdownToHtml from '../../../lib/markdownToHtml'\nimport PostType from '../../../types/post'\n\ntype Props = {\n  post: PostType\n  morePosts: PostType[]\n}\n\nconst Post = ({ post, morePosts}: Props) => {\n  const router = useRouter()\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />\n  }\n  return (\n    <>\n      <Header page={post.title} />\n      <Container>\n        {router.isFallback ? (\n          <PostTitle>Loadingâ€¦</PostTitle>\n        ) : (\n          <>\n            <article>\n              <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n                <meta property=\"og:image\" content={post.ogImage.url} />\n              </Head>\n              <PostHeader\n                title={post.title}\n                coverImage={post.coverImage}\n                date={post.date}\n                author={post.author}\n              />\n              <PostBody content={post.content} />\n            </article>\n          </>\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default Post\n\ntype Params = {\n  params: {\n    slug: string\n  }\n}\n\nexport async function getStaticProps({ params }: Params) {\n  const post = getPostBySlug(params.slug, [\n    'title',\n    'date',\n    'slug',\n    'author',\n    'content',\n    'ogImage',\n    'coverImage',\n  ])\n  const content = await markdownToHtml(post.content || '')\n\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug'])\n\n  return {\n    paths: posts.map((posts) => {\n      return {\n        params: {\n          slug: posts.slug,\n        },\n      }\n    }),\n    fallback: false,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}